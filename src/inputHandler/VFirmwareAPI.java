// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vFirmware_API.proto

package inputHandler;

public final class VFirmwareAPI {
  private VFirmwareAPI() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface Vec_2DOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Vec_2D)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float x = 1;</code>
     * @return The x.
     */
    float getX();

    /**
     * <code>float y = 2;</code>
     * @return The y.
     */
    float getY();
  }
  /**
   * Protobuf type {@code Vec_2D}
   */
  public static final class Vec_2D extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Vec_2D)
      Vec_2DOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Vec_2D.newBuilder() to construct.
    private Vec_2D(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Vec_2D() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Vec_2D();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Vec_2D(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              x_ = input.readFloat();
              break;
            }
            case 21: {

              y_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return inputHandler.VFirmwareAPI.internal_static_Vec_2D_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return inputHandler.VFirmwareAPI.internal_static_Vec_2D_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              inputHandler.VFirmwareAPI.Vec_2D.class, inputHandler.VFirmwareAPI.Vec_2D.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    /**
     * <code>float x = 1;</code>
     * @return The x.
     */
    @java.lang.Override
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    /**
     * <code>float y = 2;</code>
     * @return The y.
     */
    @java.lang.Override
    public float getY() {
      return y_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (x_ != 0F) {
        output.writeFloat(1, x_);
      }
      if (y_ != 0F) {
        output.writeFloat(2, y_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (x_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (y_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof inputHandler.VFirmwareAPI.Vec_2D)) {
        return super.equals(obj);
      }
      inputHandler.VFirmwareAPI.Vec_2D other = (inputHandler.VFirmwareAPI.Vec_2D) obj;

      if (java.lang.Float.floatToIntBits(getX())
          != java.lang.Float.floatToIntBits(
              other.getX())) return false;
      if (java.lang.Float.floatToIntBits(getY())
          != java.lang.Float.floatToIntBits(
              other.getY())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX());
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static inputHandler.VFirmwareAPI.Vec_2D parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static inputHandler.VFirmwareAPI.Vec_2D parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static inputHandler.VFirmwareAPI.Vec_2D parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static inputHandler.VFirmwareAPI.Vec_2D parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static inputHandler.VFirmwareAPI.Vec_2D parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static inputHandler.VFirmwareAPI.Vec_2D parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static inputHandler.VFirmwareAPI.Vec_2D parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static inputHandler.VFirmwareAPI.Vec_2D parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static inputHandler.VFirmwareAPI.Vec_2D parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static inputHandler.VFirmwareAPI.Vec_2D parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static inputHandler.VFirmwareAPI.Vec_2D parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static inputHandler.VFirmwareAPI.Vec_2D parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(inputHandler.VFirmwareAPI.Vec_2D prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Vec_2D}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Vec_2D)
        inputHandler.VFirmwareAPI.Vec_2DOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return inputHandler.VFirmwareAPI.internal_static_Vec_2D_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return inputHandler.VFirmwareAPI.internal_static_Vec_2D_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                inputHandler.VFirmwareAPI.Vec_2D.class, inputHandler.VFirmwareAPI.Vec_2D.Builder.class);
      }

      // Construct using inputHandler.VFirmwareAPI.Vec_2D.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        x_ = 0F;

        y_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return inputHandler.VFirmwareAPI.internal_static_Vec_2D_descriptor;
      }

      @java.lang.Override
      public inputHandler.VFirmwareAPI.Vec_2D getDefaultInstanceForType() {
        return inputHandler.VFirmwareAPI.Vec_2D.getDefaultInstance();
      }

      @java.lang.Override
      public inputHandler.VFirmwareAPI.Vec_2D build() {
        inputHandler.VFirmwareAPI.Vec_2D result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public inputHandler.VFirmwareAPI.Vec_2D buildPartial() {
        inputHandler.VFirmwareAPI.Vec_2D result = new inputHandler.VFirmwareAPI.Vec_2D(this);
        result.x_ = x_;
        result.y_ = y_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof inputHandler.VFirmwareAPI.Vec_2D) {
          return mergeFrom((inputHandler.VFirmwareAPI.Vec_2D)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(inputHandler.VFirmwareAPI.Vec_2D other) {
        if (other == inputHandler.VFirmwareAPI.Vec_2D.getDefaultInstance()) return this;
        if (other.getX() != 0F) {
          setX(other.getX());
        }
        if (other.getY() != 0F) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        inputHandler.VFirmwareAPI.Vec_2D parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (inputHandler.VFirmwareAPI.Vec_2D) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float x_ ;
      /**
       * <code>float x = 1;</code>
       * @return The x.
       */
      @java.lang.Override
      public float getX() {
        return x_;
      }
      /**
       * <code>float x = 1;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(float value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float x = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <code>float y = 2;</code>
       * @return The y.
       */
      @java.lang.Override
      public float getY() {
        return y_;
      }
      /**
       * <code>float y = 2;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(float value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float y = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        
        y_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Vec_2D)
    }

    // @@protoc_insertion_point(class_scope:Vec_2D)
    private static final inputHandler.VFirmwareAPI.Vec_2D DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new inputHandler.VFirmwareAPI.Vec_2D();
    }

    public static inputHandler.VFirmwareAPI.Vec_2D getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Vec_2D>
        PARSER = new com.google.protobuf.AbstractParser<Vec_2D>() {
      @java.lang.Override
      public Vec_2D parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Vec_2D(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Vec_2D> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Vec_2D> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public inputHandler.VFirmwareAPI.Vec_2D getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VF_CommandsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:VF_Commands)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * set true only once at the beginning to initialize the sensor systems 
     * </pre>
     *
     * <code>bool init = 1;</code>
     * @return The init.
     */
    boolean getInit();

    /**
     * <pre>
     * motion cmd to make the robot move at direction of cartesian vector (x, y)
     * with unit represented by percentage of maximum motor output
     * unit range: (-100 ~ 100) x (-100 ~ 100) where 100 corresponds to 100 percent 
     * of motor maximum output 
     * </pre>
     *
     * <code>.Vec_2D translational_output = 2;</code>
     * @return Whether the translationalOutput field is set.
     */
    boolean hasTranslationalOutput();
    /**
     * <pre>
     * motion cmd to make the robot move at direction of cartesian vector (x, y)
     * with unit represented by percentage of maximum motor output
     * unit range: (-100 ~ 100) x (-100 ~ 100) where 100 corresponds to 100 percent 
     * of motor maximum output 
     * </pre>
     *
     * <code>.Vec_2D translational_output = 2;</code>
     * @return The translationalOutput.
     */
    inputHandler.VFirmwareAPI.Vec_2D getTranslationalOutput();
    /**
     * <pre>
     * motion cmd to make the robot move at direction of cartesian vector (x, y)
     * with unit represented by percentage of maximum motor output
     * unit range: (-100 ~ 100) x (-100 ~ 100) where 100 corresponds to 100 percent 
     * of motor maximum output 
     * </pre>
     *
     * <code>.Vec_2D translational_output = 2;</code>
     */
    inputHandler.VFirmwareAPI.Vec_2DOrBuilder getTranslationalOutputOrBuilder();

    /**
     * <pre>
     * similar to the above, motor cmd for rotation, + rotate left, - rotate right, 
     * unit range -100 ~ 100
     * </pre>
     *
     * <code>float rotational_output = 3;</code>
     * @return The rotationalOutput.
     */
    float getRotationalOutput();

    /**
     * <pre>
     * Kicker(+chipper) cmd represented in vector (x, z)
     * with unit range (-100 ~ 100) x (-100 ~ 100) 
     * x corresponds to horizontal kick strength
     * z corresponds to vertical kick strength
     * </pre>
     *
     * <code>.Vec_2D kicker = 4;</code>
     * @return Whether the kicker field is set.
     */
    boolean hasKicker();
    /**
     * <pre>
     * Kicker(+chipper) cmd represented in vector (x, z)
     * with unit range (-100 ~ 100) x (-100 ~ 100) 
     * x corresponds to horizontal kick strength
     * z corresponds to vertical kick strength
     * </pre>
     *
     * <code>.Vec_2D kicker = 4;</code>
     * @return The kicker.
     */
    inputHandler.VFirmwareAPI.Vec_2D getKicker();
    /**
     * <pre>
     * Kicker(+chipper) cmd represented in vector (x, z)
     * with unit range (-100 ~ 100) x (-100 ~ 100) 
     * x corresponds to horizontal kick strength
     * z corresponds to vertical kick strength
     * </pre>
     *
     * <code>.Vec_2D kicker = 4;</code>
     */
    inputHandler.VFirmwareAPI.Vec_2DOrBuilder getKickerOrBuilder();

    /**
     * <pre>
     * set true to turn dribbler on, false to turn off 
     * </pre>
     *
     * <code>bool dribbler = 5;</code>
     * @return The dribbler.
     */
    boolean getDribbler();
  }
  /**
   * <pre>
   * commands to be sent from the application layer to the firmware layer 
   * </pre>
   *
   * Protobuf type {@code VF_Commands}
   */
  public static final class VF_Commands extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:VF_Commands)
      VF_CommandsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VF_Commands.newBuilder() to construct.
    private VF_Commands(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VF_Commands() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VF_Commands();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VF_Commands(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              init_ = input.readBool();
              break;
            }
            case 18: {
              inputHandler.VFirmwareAPI.Vec_2D.Builder subBuilder = null;
              if (translationalOutput_ != null) {
                subBuilder = translationalOutput_.toBuilder();
              }
              translationalOutput_ = input.readMessage(inputHandler.VFirmwareAPI.Vec_2D.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(translationalOutput_);
                translationalOutput_ = subBuilder.buildPartial();
              }

              break;
            }
            case 29: {

              rotationalOutput_ = input.readFloat();
              break;
            }
            case 34: {
              inputHandler.VFirmwareAPI.Vec_2D.Builder subBuilder = null;
              if (kicker_ != null) {
                subBuilder = kicker_.toBuilder();
              }
              kicker_ = input.readMessage(inputHandler.VFirmwareAPI.Vec_2D.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(kicker_);
                kicker_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {

              dribbler_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return inputHandler.VFirmwareAPI.internal_static_VF_Commands_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return inputHandler.VFirmwareAPI.internal_static_VF_Commands_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              inputHandler.VFirmwareAPI.VF_Commands.class, inputHandler.VFirmwareAPI.VF_Commands.Builder.class);
    }

    public static final int INIT_FIELD_NUMBER = 1;
    private boolean init_;
    /**
     * <pre>
     * set true only once at the beginning to initialize the sensor systems 
     * </pre>
     *
     * <code>bool init = 1;</code>
     * @return The init.
     */
    @java.lang.Override
    public boolean getInit() {
      return init_;
    }

    public static final int TRANSLATIONAL_OUTPUT_FIELD_NUMBER = 2;
    private inputHandler.VFirmwareAPI.Vec_2D translationalOutput_;
    /**
     * <pre>
     * motion cmd to make the robot move at direction of cartesian vector (x, y)
     * with unit represented by percentage of maximum motor output
     * unit range: (-100 ~ 100) x (-100 ~ 100) where 100 corresponds to 100 percent 
     * of motor maximum output 
     * </pre>
     *
     * <code>.Vec_2D translational_output = 2;</code>
     * @return Whether the translationalOutput field is set.
     */
    @java.lang.Override
    public boolean hasTranslationalOutput() {
      return translationalOutput_ != null;
    }
    /**
     * <pre>
     * motion cmd to make the robot move at direction of cartesian vector (x, y)
     * with unit represented by percentage of maximum motor output
     * unit range: (-100 ~ 100) x (-100 ~ 100) where 100 corresponds to 100 percent 
     * of motor maximum output 
     * </pre>
     *
     * <code>.Vec_2D translational_output = 2;</code>
     * @return The translationalOutput.
     */
    @java.lang.Override
    public inputHandler.VFirmwareAPI.Vec_2D getTranslationalOutput() {
      return translationalOutput_ == null ? inputHandler.VFirmwareAPI.Vec_2D.getDefaultInstance() : translationalOutput_;
    }
    /**
     * <pre>
     * motion cmd to make the robot move at direction of cartesian vector (x, y)
     * with unit represented by percentage of maximum motor output
     * unit range: (-100 ~ 100) x (-100 ~ 100) where 100 corresponds to 100 percent 
     * of motor maximum output 
     * </pre>
     *
     * <code>.Vec_2D translational_output = 2;</code>
     */
    @java.lang.Override
    public inputHandler.VFirmwareAPI.Vec_2DOrBuilder getTranslationalOutputOrBuilder() {
      return getTranslationalOutput();
    }

    public static final int ROTATIONAL_OUTPUT_FIELD_NUMBER = 3;
    private float rotationalOutput_;
    /**
     * <pre>
     * similar to the above, motor cmd for rotation, + rotate left, - rotate right, 
     * unit range -100 ~ 100
     * </pre>
     *
     * <code>float rotational_output = 3;</code>
     * @return The rotationalOutput.
     */
    @java.lang.Override
    public float getRotationalOutput() {
      return rotationalOutput_;
    }

    public static final int KICKER_FIELD_NUMBER = 4;
    private inputHandler.VFirmwareAPI.Vec_2D kicker_;
    /**
     * <pre>
     * Kicker(+chipper) cmd represented in vector (x, z)
     * with unit range (-100 ~ 100) x (-100 ~ 100) 
     * x corresponds to horizontal kick strength
     * z corresponds to vertical kick strength
     * </pre>
     *
     * <code>.Vec_2D kicker = 4;</code>
     * @return Whether the kicker field is set.
     */
    @java.lang.Override
    public boolean hasKicker() {
      return kicker_ != null;
    }
    /**
     * <pre>
     * Kicker(+chipper) cmd represented in vector (x, z)
     * with unit range (-100 ~ 100) x (-100 ~ 100) 
     * x corresponds to horizontal kick strength
     * z corresponds to vertical kick strength
     * </pre>
     *
     * <code>.Vec_2D kicker = 4;</code>
     * @return The kicker.
     */
    @java.lang.Override
    public inputHandler.VFirmwareAPI.Vec_2D getKicker() {
      return kicker_ == null ? inputHandler.VFirmwareAPI.Vec_2D.getDefaultInstance() : kicker_;
    }
    /**
     * <pre>
     * Kicker(+chipper) cmd represented in vector (x, z)
     * with unit range (-100 ~ 100) x (-100 ~ 100) 
     * x corresponds to horizontal kick strength
     * z corresponds to vertical kick strength
     * </pre>
     *
     * <code>.Vec_2D kicker = 4;</code>
     */
    @java.lang.Override
    public inputHandler.VFirmwareAPI.Vec_2DOrBuilder getKickerOrBuilder() {
      return getKicker();
    }

    public static final int DRIBBLER_FIELD_NUMBER = 5;
    private boolean dribbler_;
    /**
     * <pre>
     * set true to turn dribbler on, false to turn off 
     * </pre>
     *
     * <code>bool dribbler = 5;</code>
     * @return The dribbler.
     */
    @java.lang.Override
    public boolean getDribbler() {
      return dribbler_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (init_ != false) {
        output.writeBool(1, init_);
      }
      if (translationalOutput_ != null) {
        output.writeMessage(2, getTranslationalOutput());
      }
      if (rotationalOutput_ != 0F) {
        output.writeFloat(3, rotationalOutput_);
      }
      if (kicker_ != null) {
        output.writeMessage(4, getKicker());
      }
      if (dribbler_ != false) {
        output.writeBool(5, dribbler_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (init_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, init_);
      }
      if (translationalOutput_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTranslationalOutput());
      }
      if (rotationalOutput_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, rotationalOutput_);
      }
      if (kicker_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getKicker());
      }
      if (dribbler_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, dribbler_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof inputHandler.VFirmwareAPI.VF_Commands)) {
        return super.equals(obj);
      }
      inputHandler.VFirmwareAPI.VF_Commands other = (inputHandler.VFirmwareAPI.VF_Commands) obj;

      if (getInit()
          != other.getInit()) return false;
      if (hasTranslationalOutput() != other.hasTranslationalOutput()) return false;
      if (hasTranslationalOutput()) {
        if (!getTranslationalOutput()
            .equals(other.getTranslationalOutput())) return false;
      }
      if (java.lang.Float.floatToIntBits(getRotationalOutput())
          != java.lang.Float.floatToIntBits(
              other.getRotationalOutput())) return false;
      if (hasKicker() != other.hasKicker()) return false;
      if (hasKicker()) {
        if (!getKicker()
            .equals(other.getKicker())) return false;
      }
      if (getDribbler()
          != other.getDribbler()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getInit());
      if (hasTranslationalOutput()) {
        hash = (37 * hash) + TRANSLATIONAL_OUTPUT_FIELD_NUMBER;
        hash = (53 * hash) + getTranslationalOutput().hashCode();
      }
      hash = (37 * hash) + ROTATIONAL_OUTPUT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getRotationalOutput());
      if (hasKicker()) {
        hash = (37 * hash) + KICKER_FIELD_NUMBER;
        hash = (53 * hash) + getKicker().hashCode();
      }
      hash = (37 * hash) + DRIBBLER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDribbler());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static inputHandler.VFirmwareAPI.VF_Commands parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static inputHandler.VFirmwareAPI.VF_Commands parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static inputHandler.VFirmwareAPI.VF_Commands parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static inputHandler.VFirmwareAPI.VF_Commands parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static inputHandler.VFirmwareAPI.VF_Commands parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static inputHandler.VFirmwareAPI.VF_Commands parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static inputHandler.VFirmwareAPI.VF_Commands parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static inputHandler.VFirmwareAPI.VF_Commands parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static inputHandler.VFirmwareAPI.VF_Commands parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static inputHandler.VFirmwareAPI.VF_Commands parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static inputHandler.VFirmwareAPI.VF_Commands parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static inputHandler.VFirmwareAPI.VF_Commands parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(inputHandler.VFirmwareAPI.VF_Commands prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * commands to be sent from the application layer to the firmware layer 
     * </pre>
     *
     * Protobuf type {@code VF_Commands}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:VF_Commands)
        inputHandler.VFirmwareAPI.VF_CommandsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return inputHandler.VFirmwareAPI.internal_static_VF_Commands_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return inputHandler.VFirmwareAPI.internal_static_VF_Commands_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                inputHandler.VFirmwareAPI.VF_Commands.class, inputHandler.VFirmwareAPI.VF_Commands.Builder.class);
      }

      // Construct using inputHandler.VFirmwareAPI.VF_Commands.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        init_ = false;

        if (translationalOutputBuilder_ == null) {
          translationalOutput_ = null;
        } else {
          translationalOutput_ = null;
          translationalOutputBuilder_ = null;
        }
        rotationalOutput_ = 0F;

        if (kickerBuilder_ == null) {
          kicker_ = null;
        } else {
          kicker_ = null;
          kickerBuilder_ = null;
        }
        dribbler_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return inputHandler.VFirmwareAPI.internal_static_VF_Commands_descriptor;
      }

      @java.lang.Override
      public inputHandler.VFirmwareAPI.VF_Commands getDefaultInstanceForType() {
        return inputHandler.VFirmwareAPI.VF_Commands.getDefaultInstance();
      }

      @java.lang.Override
      public inputHandler.VFirmwareAPI.VF_Commands build() {
        inputHandler.VFirmwareAPI.VF_Commands result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public inputHandler.VFirmwareAPI.VF_Commands buildPartial() {
        inputHandler.VFirmwareAPI.VF_Commands result = new inputHandler.VFirmwareAPI.VF_Commands(this);
        result.init_ = init_;
        if (translationalOutputBuilder_ == null) {
          result.translationalOutput_ = translationalOutput_;
        } else {
          result.translationalOutput_ = translationalOutputBuilder_.build();
        }
        result.rotationalOutput_ = rotationalOutput_;
        if (kickerBuilder_ == null) {
          result.kicker_ = kicker_;
        } else {
          result.kicker_ = kickerBuilder_.build();
        }
        result.dribbler_ = dribbler_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof inputHandler.VFirmwareAPI.VF_Commands) {
          return mergeFrom((inputHandler.VFirmwareAPI.VF_Commands)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(inputHandler.VFirmwareAPI.VF_Commands other) {
        if (other == inputHandler.VFirmwareAPI.VF_Commands.getDefaultInstance()) return this;
        if (other.getInit() != false) {
          setInit(other.getInit());
        }
        if (other.hasTranslationalOutput()) {
          mergeTranslationalOutput(other.getTranslationalOutput());
        }
        if (other.getRotationalOutput() != 0F) {
          setRotationalOutput(other.getRotationalOutput());
        }
        if (other.hasKicker()) {
          mergeKicker(other.getKicker());
        }
        if (other.getDribbler() != false) {
          setDribbler(other.getDribbler());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        inputHandler.VFirmwareAPI.VF_Commands parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (inputHandler.VFirmwareAPI.VF_Commands) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean init_ ;
      /**
       * <pre>
       * set true only once at the beginning to initialize the sensor systems 
       * </pre>
       *
       * <code>bool init = 1;</code>
       * @return The init.
       */
      @java.lang.Override
      public boolean getInit() {
        return init_;
      }
      /**
       * <pre>
       * set true only once at the beginning to initialize the sensor systems 
       * </pre>
       *
       * <code>bool init = 1;</code>
       * @param value The init to set.
       * @return This builder for chaining.
       */
      public Builder setInit(boolean value) {
        
        init_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * set true only once at the beginning to initialize the sensor systems 
       * </pre>
       *
       * <code>bool init = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearInit() {
        
        init_ = false;
        onChanged();
        return this;
      }

      private inputHandler.VFirmwareAPI.Vec_2D translationalOutput_;
      private com.google.protobuf.SingleFieldBuilderV3<
          inputHandler.VFirmwareAPI.Vec_2D, inputHandler.VFirmwareAPI.Vec_2D.Builder, inputHandler.VFirmwareAPI.Vec_2DOrBuilder> translationalOutputBuilder_;
      /**
       * <pre>
       * motion cmd to make the robot move at direction of cartesian vector (x, y)
       * with unit represented by percentage of maximum motor output
       * unit range: (-100 ~ 100) x (-100 ~ 100) where 100 corresponds to 100 percent 
       * of motor maximum output 
       * </pre>
       *
       * <code>.Vec_2D translational_output = 2;</code>
       * @return Whether the translationalOutput field is set.
       */
      public boolean hasTranslationalOutput() {
        return translationalOutputBuilder_ != null || translationalOutput_ != null;
      }
      /**
       * <pre>
       * motion cmd to make the robot move at direction of cartesian vector (x, y)
       * with unit represented by percentage of maximum motor output
       * unit range: (-100 ~ 100) x (-100 ~ 100) where 100 corresponds to 100 percent 
       * of motor maximum output 
       * </pre>
       *
       * <code>.Vec_2D translational_output = 2;</code>
       * @return The translationalOutput.
       */
      public inputHandler.VFirmwareAPI.Vec_2D getTranslationalOutput() {
        if (translationalOutputBuilder_ == null) {
          return translationalOutput_ == null ? inputHandler.VFirmwareAPI.Vec_2D.getDefaultInstance() : translationalOutput_;
        } else {
          return translationalOutputBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * motion cmd to make the robot move at direction of cartesian vector (x, y)
       * with unit represented by percentage of maximum motor output
       * unit range: (-100 ~ 100) x (-100 ~ 100) where 100 corresponds to 100 percent 
       * of motor maximum output 
       * </pre>
       *
       * <code>.Vec_2D translational_output = 2;</code>
       */
      public Builder setTranslationalOutput(inputHandler.VFirmwareAPI.Vec_2D value) {
        if (translationalOutputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          translationalOutput_ = value;
          onChanged();
        } else {
          translationalOutputBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * motion cmd to make the robot move at direction of cartesian vector (x, y)
       * with unit represented by percentage of maximum motor output
       * unit range: (-100 ~ 100) x (-100 ~ 100) where 100 corresponds to 100 percent 
       * of motor maximum output 
       * </pre>
       *
       * <code>.Vec_2D translational_output = 2;</code>
       */
      public Builder setTranslationalOutput(
          inputHandler.VFirmwareAPI.Vec_2D.Builder builderForValue) {
        if (translationalOutputBuilder_ == null) {
          translationalOutput_ = builderForValue.build();
          onChanged();
        } else {
          translationalOutputBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * motion cmd to make the robot move at direction of cartesian vector (x, y)
       * with unit represented by percentage of maximum motor output
       * unit range: (-100 ~ 100) x (-100 ~ 100) where 100 corresponds to 100 percent 
       * of motor maximum output 
       * </pre>
       *
       * <code>.Vec_2D translational_output = 2;</code>
       */
      public Builder mergeTranslationalOutput(inputHandler.VFirmwareAPI.Vec_2D value) {
        if (translationalOutputBuilder_ == null) {
          if (translationalOutput_ != null) {
            translationalOutput_ =
              inputHandler.VFirmwareAPI.Vec_2D.newBuilder(translationalOutput_).mergeFrom(value).buildPartial();
          } else {
            translationalOutput_ = value;
          }
          onChanged();
        } else {
          translationalOutputBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * motion cmd to make the robot move at direction of cartesian vector (x, y)
       * with unit represented by percentage of maximum motor output
       * unit range: (-100 ~ 100) x (-100 ~ 100) where 100 corresponds to 100 percent 
       * of motor maximum output 
       * </pre>
       *
       * <code>.Vec_2D translational_output = 2;</code>
       */
      public Builder clearTranslationalOutput() {
        if (translationalOutputBuilder_ == null) {
          translationalOutput_ = null;
          onChanged();
        } else {
          translationalOutput_ = null;
          translationalOutputBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * motion cmd to make the robot move at direction of cartesian vector (x, y)
       * with unit represented by percentage of maximum motor output
       * unit range: (-100 ~ 100) x (-100 ~ 100) where 100 corresponds to 100 percent 
       * of motor maximum output 
       * </pre>
       *
       * <code>.Vec_2D translational_output = 2;</code>
       */
      public inputHandler.VFirmwareAPI.Vec_2D.Builder getTranslationalOutputBuilder() {
        
        onChanged();
        return getTranslationalOutputFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * motion cmd to make the robot move at direction of cartesian vector (x, y)
       * with unit represented by percentage of maximum motor output
       * unit range: (-100 ~ 100) x (-100 ~ 100) where 100 corresponds to 100 percent 
       * of motor maximum output 
       * </pre>
       *
       * <code>.Vec_2D translational_output = 2;</code>
       */
      public inputHandler.VFirmwareAPI.Vec_2DOrBuilder getTranslationalOutputOrBuilder() {
        if (translationalOutputBuilder_ != null) {
          return translationalOutputBuilder_.getMessageOrBuilder();
        } else {
          return translationalOutput_ == null ?
              inputHandler.VFirmwareAPI.Vec_2D.getDefaultInstance() : translationalOutput_;
        }
      }
      /**
       * <pre>
       * motion cmd to make the robot move at direction of cartesian vector (x, y)
       * with unit represented by percentage of maximum motor output
       * unit range: (-100 ~ 100) x (-100 ~ 100) where 100 corresponds to 100 percent 
       * of motor maximum output 
       * </pre>
       *
       * <code>.Vec_2D translational_output = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          inputHandler.VFirmwareAPI.Vec_2D, inputHandler.VFirmwareAPI.Vec_2D.Builder, inputHandler.VFirmwareAPI.Vec_2DOrBuilder> 
          getTranslationalOutputFieldBuilder() {
        if (translationalOutputBuilder_ == null) {
          translationalOutputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              inputHandler.VFirmwareAPI.Vec_2D, inputHandler.VFirmwareAPI.Vec_2D.Builder, inputHandler.VFirmwareAPI.Vec_2DOrBuilder>(
                  getTranslationalOutput(),
                  getParentForChildren(),
                  isClean());
          translationalOutput_ = null;
        }
        return translationalOutputBuilder_;
      }

      private float rotationalOutput_ ;
      /**
       * <pre>
       * similar to the above, motor cmd for rotation, + rotate left, - rotate right, 
       * unit range -100 ~ 100
       * </pre>
       *
       * <code>float rotational_output = 3;</code>
       * @return The rotationalOutput.
       */
      @java.lang.Override
      public float getRotationalOutput() {
        return rotationalOutput_;
      }
      /**
       * <pre>
       * similar to the above, motor cmd for rotation, + rotate left, - rotate right, 
       * unit range -100 ~ 100
       * </pre>
       *
       * <code>float rotational_output = 3;</code>
       * @param value The rotationalOutput to set.
       * @return This builder for chaining.
       */
      public Builder setRotationalOutput(float value) {
        
        rotationalOutput_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * similar to the above, motor cmd for rotation, + rotate left, - rotate right, 
       * unit range -100 ~ 100
       * </pre>
       *
       * <code>float rotational_output = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRotationalOutput() {
        
        rotationalOutput_ = 0F;
        onChanged();
        return this;
      }

      private inputHandler.VFirmwareAPI.Vec_2D kicker_;
      private com.google.protobuf.SingleFieldBuilderV3<
          inputHandler.VFirmwareAPI.Vec_2D, inputHandler.VFirmwareAPI.Vec_2D.Builder, inputHandler.VFirmwareAPI.Vec_2DOrBuilder> kickerBuilder_;
      /**
       * <pre>
       * Kicker(+chipper) cmd represented in vector (x, z)
       * with unit range (-100 ~ 100) x (-100 ~ 100) 
       * x corresponds to horizontal kick strength
       * z corresponds to vertical kick strength
       * </pre>
       *
       * <code>.Vec_2D kicker = 4;</code>
       * @return Whether the kicker field is set.
       */
      public boolean hasKicker() {
        return kickerBuilder_ != null || kicker_ != null;
      }
      /**
       * <pre>
       * Kicker(+chipper) cmd represented in vector (x, z)
       * with unit range (-100 ~ 100) x (-100 ~ 100) 
       * x corresponds to horizontal kick strength
       * z corresponds to vertical kick strength
       * </pre>
       *
       * <code>.Vec_2D kicker = 4;</code>
       * @return The kicker.
       */
      public inputHandler.VFirmwareAPI.Vec_2D getKicker() {
        if (kickerBuilder_ == null) {
          return kicker_ == null ? inputHandler.VFirmwareAPI.Vec_2D.getDefaultInstance() : kicker_;
        } else {
          return kickerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Kicker(+chipper) cmd represented in vector (x, z)
       * with unit range (-100 ~ 100) x (-100 ~ 100) 
       * x corresponds to horizontal kick strength
       * z corresponds to vertical kick strength
       * </pre>
       *
       * <code>.Vec_2D kicker = 4;</code>
       */
      public Builder setKicker(inputHandler.VFirmwareAPI.Vec_2D value) {
        if (kickerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          kicker_ = value;
          onChanged();
        } else {
          kickerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Kicker(+chipper) cmd represented in vector (x, z)
       * with unit range (-100 ~ 100) x (-100 ~ 100) 
       * x corresponds to horizontal kick strength
       * z corresponds to vertical kick strength
       * </pre>
       *
       * <code>.Vec_2D kicker = 4;</code>
       */
      public Builder setKicker(
          inputHandler.VFirmwareAPI.Vec_2D.Builder builderForValue) {
        if (kickerBuilder_ == null) {
          kicker_ = builderForValue.build();
          onChanged();
        } else {
          kickerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Kicker(+chipper) cmd represented in vector (x, z)
       * with unit range (-100 ~ 100) x (-100 ~ 100) 
       * x corresponds to horizontal kick strength
       * z corresponds to vertical kick strength
       * </pre>
       *
       * <code>.Vec_2D kicker = 4;</code>
       */
      public Builder mergeKicker(inputHandler.VFirmwareAPI.Vec_2D value) {
        if (kickerBuilder_ == null) {
          if (kicker_ != null) {
            kicker_ =
              inputHandler.VFirmwareAPI.Vec_2D.newBuilder(kicker_).mergeFrom(value).buildPartial();
          } else {
            kicker_ = value;
          }
          onChanged();
        } else {
          kickerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Kicker(+chipper) cmd represented in vector (x, z)
       * with unit range (-100 ~ 100) x (-100 ~ 100) 
       * x corresponds to horizontal kick strength
       * z corresponds to vertical kick strength
       * </pre>
       *
       * <code>.Vec_2D kicker = 4;</code>
       */
      public Builder clearKicker() {
        if (kickerBuilder_ == null) {
          kicker_ = null;
          onChanged();
        } else {
          kicker_ = null;
          kickerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Kicker(+chipper) cmd represented in vector (x, z)
       * with unit range (-100 ~ 100) x (-100 ~ 100) 
       * x corresponds to horizontal kick strength
       * z corresponds to vertical kick strength
       * </pre>
       *
       * <code>.Vec_2D kicker = 4;</code>
       */
      public inputHandler.VFirmwareAPI.Vec_2D.Builder getKickerBuilder() {
        
        onChanged();
        return getKickerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Kicker(+chipper) cmd represented in vector (x, z)
       * with unit range (-100 ~ 100) x (-100 ~ 100) 
       * x corresponds to horizontal kick strength
       * z corresponds to vertical kick strength
       * </pre>
       *
       * <code>.Vec_2D kicker = 4;</code>
       */
      public inputHandler.VFirmwareAPI.Vec_2DOrBuilder getKickerOrBuilder() {
        if (kickerBuilder_ != null) {
          return kickerBuilder_.getMessageOrBuilder();
        } else {
          return kicker_ == null ?
              inputHandler.VFirmwareAPI.Vec_2D.getDefaultInstance() : kicker_;
        }
      }
      /**
       * <pre>
       * Kicker(+chipper) cmd represented in vector (x, z)
       * with unit range (-100 ~ 100) x (-100 ~ 100) 
       * x corresponds to horizontal kick strength
       * z corresponds to vertical kick strength
       * </pre>
       *
       * <code>.Vec_2D kicker = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          inputHandler.VFirmwareAPI.Vec_2D, inputHandler.VFirmwareAPI.Vec_2D.Builder, inputHandler.VFirmwareAPI.Vec_2DOrBuilder> 
          getKickerFieldBuilder() {
        if (kickerBuilder_ == null) {
          kickerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              inputHandler.VFirmwareAPI.Vec_2D, inputHandler.VFirmwareAPI.Vec_2D.Builder, inputHandler.VFirmwareAPI.Vec_2DOrBuilder>(
                  getKicker(),
                  getParentForChildren(),
                  isClean());
          kicker_ = null;
        }
        return kickerBuilder_;
      }

      private boolean dribbler_ ;
      /**
       * <pre>
       * set true to turn dribbler on, false to turn off 
       * </pre>
       *
       * <code>bool dribbler = 5;</code>
       * @return The dribbler.
       */
      @java.lang.Override
      public boolean getDribbler() {
        return dribbler_;
      }
      /**
       * <pre>
       * set true to turn dribbler on, false to turn off 
       * </pre>
       *
       * <code>bool dribbler = 5;</code>
       * @param value The dribbler to set.
       * @return This builder for chaining.
       */
      public Builder setDribbler(boolean value) {
        
        dribbler_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * set true to turn dribbler on, false to turn off 
       * </pre>
       *
       * <code>bool dribbler = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDribbler() {
        
        dribbler_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:VF_Commands)
    }

    // @@protoc_insertion_point(class_scope:VF_Commands)
    private static final inputHandler.VFirmwareAPI.VF_Commands DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new inputHandler.VFirmwareAPI.VF_Commands();
    }

    public static inputHandler.VFirmwareAPI.VF_Commands getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VF_Commands>
        PARSER = new com.google.protobuf.AbstractParser<VF_Commands>() {
      @java.lang.Override
      public VF_Commands parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VF_Commands(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VF_Commands> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VF_Commands> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public inputHandler.VFirmwareAPI.VF_Commands getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VF_DataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:VF_Data)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unit: millimeter 
     * </pre>
     *
     * <code>.Vec_2D translational_displacement = 1;</code>
     * @return Whether the translationalDisplacement field is set.
     */
    boolean hasTranslationalDisplacement();
    /**
     * <pre>
     * unit: millimeter 
     * </pre>
     *
     * <code>.Vec_2D translational_displacement = 1;</code>
     * @return The translationalDisplacement.
     */
    inputHandler.VFirmwareAPI.Vec_2D getTranslationalDisplacement();
    /**
     * <pre>
     * unit: millimeter 
     * </pre>
     *
     * <code>.Vec_2D translational_displacement = 1;</code>
     */
    inputHandler.VFirmwareAPI.Vec_2DOrBuilder getTranslationalDisplacementOrBuilder();

    /**
     * <pre>
     * unit: millimeter/milliseconds, which is m/s 
     * </pre>
     *
     * <code>.Vec_2D translational_velocity = 2;</code>
     * @return Whether the translationalVelocity field is set.
     */
    boolean hasTranslationalVelocity();
    /**
     * <pre>
     * unit: millimeter/milliseconds, which is m/s 
     * </pre>
     *
     * <code>.Vec_2D translational_velocity = 2;</code>
     * @return The translationalVelocity.
     */
    inputHandler.VFirmwareAPI.Vec_2D getTranslationalVelocity();
    /**
     * <pre>
     * unit: millimeter/milliseconds, which is m/s 
     * </pre>
     *
     * <code>.Vec_2D translational_velocity = 2;</code>
     */
    inputHandler.VFirmwareAPI.Vec_2DOrBuilder getTranslationalVelocityOrBuilder();

    /**
     * <pre>
     * unit: degree (0 ~ 180) for the left half, 
     *              (0 ~ -180) for the right half
     * </pre>
     *
     * <code>float rotational_displacement = 3;</code>
     * @return The rotationalDisplacement.
     */
    float getRotationalDisplacement();

    /**
     * <pre>
     * unit: degree/millisecond, sign transition from 180 to -180 is handled 
     * </pre>
     *
     * <code>float rotational_velocity = 4;</code>
     * @return The rotationalVelocity.
     */
    float getRotationalVelocity();
  }
  /**
   * <pre>
   * data to be received from the firmware layer to the application layer 
   * </pre>
   *
   * Protobuf type {@code VF_Data}
   */
  public static final class VF_Data extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:VF_Data)
      VF_DataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VF_Data.newBuilder() to construct.
    private VF_Data(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VF_Data() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VF_Data();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VF_Data(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              inputHandler.VFirmwareAPI.Vec_2D.Builder subBuilder = null;
              if (translationalDisplacement_ != null) {
                subBuilder = translationalDisplacement_.toBuilder();
              }
              translationalDisplacement_ = input.readMessage(inputHandler.VFirmwareAPI.Vec_2D.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(translationalDisplacement_);
                translationalDisplacement_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              inputHandler.VFirmwareAPI.Vec_2D.Builder subBuilder = null;
              if (translationalVelocity_ != null) {
                subBuilder = translationalVelocity_.toBuilder();
              }
              translationalVelocity_ = input.readMessage(inputHandler.VFirmwareAPI.Vec_2D.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(translationalVelocity_);
                translationalVelocity_ = subBuilder.buildPartial();
              }

              break;
            }
            case 29: {

              rotationalDisplacement_ = input.readFloat();
              break;
            }
            case 37: {

              rotationalVelocity_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return inputHandler.VFirmwareAPI.internal_static_VF_Data_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return inputHandler.VFirmwareAPI.internal_static_VF_Data_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              inputHandler.VFirmwareAPI.VF_Data.class, inputHandler.VFirmwareAPI.VF_Data.Builder.class);
    }

    public static final int TRANSLATIONAL_DISPLACEMENT_FIELD_NUMBER = 1;
    private inputHandler.VFirmwareAPI.Vec_2D translationalDisplacement_;
    /**
     * <pre>
     * unit: millimeter 
     * </pre>
     *
     * <code>.Vec_2D translational_displacement = 1;</code>
     * @return Whether the translationalDisplacement field is set.
     */
    @java.lang.Override
    public boolean hasTranslationalDisplacement() {
      return translationalDisplacement_ != null;
    }
    /**
     * <pre>
     * unit: millimeter 
     * </pre>
     *
     * <code>.Vec_2D translational_displacement = 1;</code>
     * @return The translationalDisplacement.
     */
    @java.lang.Override
    public inputHandler.VFirmwareAPI.Vec_2D getTranslationalDisplacement() {
      return translationalDisplacement_ == null ? inputHandler.VFirmwareAPI.Vec_2D.getDefaultInstance() : translationalDisplacement_;
    }
    /**
     * <pre>
     * unit: millimeter 
     * </pre>
     *
     * <code>.Vec_2D translational_displacement = 1;</code>
     */
    @java.lang.Override
    public inputHandler.VFirmwareAPI.Vec_2DOrBuilder getTranslationalDisplacementOrBuilder() {
      return getTranslationalDisplacement();
    }

    public static final int TRANSLATIONAL_VELOCITY_FIELD_NUMBER = 2;
    private inputHandler.VFirmwareAPI.Vec_2D translationalVelocity_;
    /**
     * <pre>
     * unit: millimeter/milliseconds, which is m/s 
     * </pre>
     *
     * <code>.Vec_2D translational_velocity = 2;</code>
     * @return Whether the translationalVelocity field is set.
     */
    @java.lang.Override
    public boolean hasTranslationalVelocity() {
      return translationalVelocity_ != null;
    }
    /**
     * <pre>
     * unit: millimeter/milliseconds, which is m/s 
     * </pre>
     *
     * <code>.Vec_2D translational_velocity = 2;</code>
     * @return The translationalVelocity.
     */
    @java.lang.Override
    public inputHandler.VFirmwareAPI.Vec_2D getTranslationalVelocity() {
      return translationalVelocity_ == null ? inputHandler.VFirmwareAPI.Vec_2D.getDefaultInstance() : translationalVelocity_;
    }
    /**
     * <pre>
     * unit: millimeter/milliseconds, which is m/s 
     * </pre>
     *
     * <code>.Vec_2D translational_velocity = 2;</code>
     */
    @java.lang.Override
    public inputHandler.VFirmwareAPI.Vec_2DOrBuilder getTranslationalVelocityOrBuilder() {
      return getTranslationalVelocity();
    }

    public static final int ROTATIONAL_DISPLACEMENT_FIELD_NUMBER = 3;
    private float rotationalDisplacement_;
    /**
     * <pre>
     * unit: degree (0 ~ 180) for the left half, 
     *              (0 ~ -180) for the right half
     * </pre>
     *
     * <code>float rotational_displacement = 3;</code>
     * @return The rotationalDisplacement.
     */
    @java.lang.Override
    public float getRotationalDisplacement() {
      return rotationalDisplacement_;
    }

    public static final int ROTATIONAL_VELOCITY_FIELD_NUMBER = 4;
    private float rotationalVelocity_;
    /**
     * <pre>
     * unit: degree/millisecond, sign transition from 180 to -180 is handled 
     * </pre>
     *
     * <code>float rotational_velocity = 4;</code>
     * @return The rotationalVelocity.
     */
    @java.lang.Override
    public float getRotationalVelocity() {
      return rotationalVelocity_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (translationalDisplacement_ != null) {
        output.writeMessage(1, getTranslationalDisplacement());
      }
      if (translationalVelocity_ != null) {
        output.writeMessage(2, getTranslationalVelocity());
      }
      if (rotationalDisplacement_ != 0F) {
        output.writeFloat(3, rotationalDisplacement_);
      }
      if (rotationalVelocity_ != 0F) {
        output.writeFloat(4, rotationalVelocity_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (translationalDisplacement_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTranslationalDisplacement());
      }
      if (translationalVelocity_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTranslationalVelocity());
      }
      if (rotationalDisplacement_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, rotationalDisplacement_);
      }
      if (rotationalVelocity_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, rotationalVelocity_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof inputHandler.VFirmwareAPI.VF_Data)) {
        return super.equals(obj);
      }
      inputHandler.VFirmwareAPI.VF_Data other = (inputHandler.VFirmwareAPI.VF_Data) obj;

      if (hasTranslationalDisplacement() != other.hasTranslationalDisplacement()) return false;
      if (hasTranslationalDisplacement()) {
        if (!getTranslationalDisplacement()
            .equals(other.getTranslationalDisplacement())) return false;
      }
      if (hasTranslationalVelocity() != other.hasTranslationalVelocity()) return false;
      if (hasTranslationalVelocity()) {
        if (!getTranslationalVelocity()
            .equals(other.getTranslationalVelocity())) return false;
      }
      if (java.lang.Float.floatToIntBits(getRotationalDisplacement())
          != java.lang.Float.floatToIntBits(
              other.getRotationalDisplacement())) return false;
      if (java.lang.Float.floatToIntBits(getRotationalVelocity())
          != java.lang.Float.floatToIntBits(
              other.getRotationalVelocity())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTranslationalDisplacement()) {
        hash = (37 * hash) + TRANSLATIONAL_DISPLACEMENT_FIELD_NUMBER;
        hash = (53 * hash) + getTranslationalDisplacement().hashCode();
      }
      if (hasTranslationalVelocity()) {
        hash = (37 * hash) + TRANSLATIONAL_VELOCITY_FIELD_NUMBER;
        hash = (53 * hash) + getTranslationalVelocity().hashCode();
      }
      hash = (37 * hash) + ROTATIONAL_DISPLACEMENT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getRotationalDisplacement());
      hash = (37 * hash) + ROTATIONAL_VELOCITY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getRotationalVelocity());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static inputHandler.VFirmwareAPI.VF_Data parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static inputHandler.VFirmwareAPI.VF_Data parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static inputHandler.VFirmwareAPI.VF_Data parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static inputHandler.VFirmwareAPI.VF_Data parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static inputHandler.VFirmwareAPI.VF_Data parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static inputHandler.VFirmwareAPI.VF_Data parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static inputHandler.VFirmwareAPI.VF_Data parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static inputHandler.VFirmwareAPI.VF_Data parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static inputHandler.VFirmwareAPI.VF_Data parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static inputHandler.VFirmwareAPI.VF_Data parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static inputHandler.VFirmwareAPI.VF_Data parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static inputHandler.VFirmwareAPI.VF_Data parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(inputHandler.VFirmwareAPI.VF_Data prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * data to be received from the firmware layer to the application layer 
     * </pre>
     *
     * Protobuf type {@code VF_Data}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:VF_Data)
        inputHandler.VFirmwareAPI.VF_DataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return inputHandler.VFirmwareAPI.internal_static_VF_Data_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return inputHandler.VFirmwareAPI.internal_static_VF_Data_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                inputHandler.VFirmwareAPI.VF_Data.class, inputHandler.VFirmwareAPI.VF_Data.Builder.class);
      }

      // Construct using inputHandler.VFirmwareAPI.VF_Data.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (translationalDisplacementBuilder_ == null) {
          translationalDisplacement_ = null;
        } else {
          translationalDisplacement_ = null;
          translationalDisplacementBuilder_ = null;
        }
        if (translationalVelocityBuilder_ == null) {
          translationalVelocity_ = null;
        } else {
          translationalVelocity_ = null;
          translationalVelocityBuilder_ = null;
        }
        rotationalDisplacement_ = 0F;

        rotationalVelocity_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return inputHandler.VFirmwareAPI.internal_static_VF_Data_descriptor;
      }

      @java.lang.Override
      public inputHandler.VFirmwareAPI.VF_Data getDefaultInstanceForType() {
        return inputHandler.VFirmwareAPI.VF_Data.getDefaultInstance();
      }

      @java.lang.Override
      public inputHandler.VFirmwareAPI.VF_Data build() {
        inputHandler.VFirmwareAPI.VF_Data result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public inputHandler.VFirmwareAPI.VF_Data buildPartial() {
        inputHandler.VFirmwareAPI.VF_Data result = new inputHandler.VFirmwareAPI.VF_Data(this);
        if (translationalDisplacementBuilder_ == null) {
          result.translationalDisplacement_ = translationalDisplacement_;
        } else {
          result.translationalDisplacement_ = translationalDisplacementBuilder_.build();
        }
        if (translationalVelocityBuilder_ == null) {
          result.translationalVelocity_ = translationalVelocity_;
        } else {
          result.translationalVelocity_ = translationalVelocityBuilder_.build();
        }
        result.rotationalDisplacement_ = rotationalDisplacement_;
        result.rotationalVelocity_ = rotationalVelocity_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof inputHandler.VFirmwareAPI.VF_Data) {
          return mergeFrom((inputHandler.VFirmwareAPI.VF_Data)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(inputHandler.VFirmwareAPI.VF_Data other) {
        if (other == inputHandler.VFirmwareAPI.VF_Data.getDefaultInstance()) return this;
        if (other.hasTranslationalDisplacement()) {
          mergeTranslationalDisplacement(other.getTranslationalDisplacement());
        }
        if (other.hasTranslationalVelocity()) {
          mergeTranslationalVelocity(other.getTranslationalVelocity());
        }
        if (other.getRotationalDisplacement() != 0F) {
          setRotationalDisplacement(other.getRotationalDisplacement());
        }
        if (other.getRotationalVelocity() != 0F) {
          setRotationalVelocity(other.getRotationalVelocity());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        inputHandler.VFirmwareAPI.VF_Data parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (inputHandler.VFirmwareAPI.VF_Data) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private inputHandler.VFirmwareAPI.Vec_2D translationalDisplacement_;
      private com.google.protobuf.SingleFieldBuilderV3<
          inputHandler.VFirmwareAPI.Vec_2D, inputHandler.VFirmwareAPI.Vec_2D.Builder, inputHandler.VFirmwareAPI.Vec_2DOrBuilder> translationalDisplacementBuilder_;
      /**
       * <pre>
       * unit: millimeter 
       * </pre>
       *
       * <code>.Vec_2D translational_displacement = 1;</code>
       * @return Whether the translationalDisplacement field is set.
       */
      public boolean hasTranslationalDisplacement() {
        return translationalDisplacementBuilder_ != null || translationalDisplacement_ != null;
      }
      /**
       * <pre>
       * unit: millimeter 
       * </pre>
       *
       * <code>.Vec_2D translational_displacement = 1;</code>
       * @return The translationalDisplacement.
       */
      public inputHandler.VFirmwareAPI.Vec_2D getTranslationalDisplacement() {
        if (translationalDisplacementBuilder_ == null) {
          return translationalDisplacement_ == null ? inputHandler.VFirmwareAPI.Vec_2D.getDefaultInstance() : translationalDisplacement_;
        } else {
          return translationalDisplacementBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * unit: millimeter 
       * </pre>
       *
       * <code>.Vec_2D translational_displacement = 1;</code>
       */
      public Builder setTranslationalDisplacement(inputHandler.VFirmwareAPI.Vec_2D value) {
        if (translationalDisplacementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          translationalDisplacement_ = value;
          onChanged();
        } else {
          translationalDisplacementBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * unit: millimeter 
       * </pre>
       *
       * <code>.Vec_2D translational_displacement = 1;</code>
       */
      public Builder setTranslationalDisplacement(
          inputHandler.VFirmwareAPI.Vec_2D.Builder builderForValue) {
        if (translationalDisplacementBuilder_ == null) {
          translationalDisplacement_ = builderForValue.build();
          onChanged();
        } else {
          translationalDisplacementBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * unit: millimeter 
       * </pre>
       *
       * <code>.Vec_2D translational_displacement = 1;</code>
       */
      public Builder mergeTranslationalDisplacement(inputHandler.VFirmwareAPI.Vec_2D value) {
        if (translationalDisplacementBuilder_ == null) {
          if (translationalDisplacement_ != null) {
            translationalDisplacement_ =
              inputHandler.VFirmwareAPI.Vec_2D.newBuilder(translationalDisplacement_).mergeFrom(value).buildPartial();
          } else {
            translationalDisplacement_ = value;
          }
          onChanged();
        } else {
          translationalDisplacementBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * unit: millimeter 
       * </pre>
       *
       * <code>.Vec_2D translational_displacement = 1;</code>
       */
      public Builder clearTranslationalDisplacement() {
        if (translationalDisplacementBuilder_ == null) {
          translationalDisplacement_ = null;
          onChanged();
        } else {
          translationalDisplacement_ = null;
          translationalDisplacementBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * unit: millimeter 
       * </pre>
       *
       * <code>.Vec_2D translational_displacement = 1;</code>
       */
      public inputHandler.VFirmwareAPI.Vec_2D.Builder getTranslationalDisplacementBuilder() {
        
        onChanged();
        return getTranslationalDisplacementFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * unit: millimeter 
       * </pre>
       *
       * <code>.Vec_2D translational_displacement = 1;</code>
       */
      public inputHandler.VFirmwareAPI.Vec_2DOrBuilder getTranslationalDisplacementOrBuilder() {
        if (translationalDisplacementBuilder_ != null) {
          return translationalDisplacementBuilder_.getMessageOrBuilder();
        } else {
          return translationalDisplacement_ == null ?
              inputHandler.VFirmwareAPI.Vec_2D.getDefaultInstance() : translationalDisplacement_;
        }
      }
      /**
       * <pre>
       * unit: millimeter 
       * </pre>
       *
       * <code>.Vec_2D translational_displacement = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          inputHandler.VFirmwareAPI.Vec_2D, inputHandler.VFirmwareAPI.Vec_2D.Builder, inputHandler.VFirmwareAPI.Vec_2DOrBuilder> 
          getTranslationalDisplacementFieldBuilder() {
        if (translationalDisplacementBuilder_ == null) {
          translationalDisplacementBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              inputHandler.VFirmwareAPI.Vec_2D, inputHandler.VFirmwareAPI.Vec_2D.Builder, inputHandler.VFirmwareAPI.Vec_2DOrBuilder>(
                  getTranslationalDisplacement(),
                  getParentForChildren(),
                  isClean());
          translationalDisplacement_ = null;
        }
        return translationalDisplacementBuilder_;
      }

      private inputHandler.VFirmwareAPI.Vec_2D translationalVelocity_;
      private com.google.protobuf.SingleFieldBuilderV3<
          inputHandler.VFirmwareAPI.Vec_2D, inputHandler.VFirmwareAPI.Vec_2D.Builder, inputHandler.VFirmwareAPI.Vec_2DOrBuilder> translationalVelocityBuilder_;
      /**
       * <pre>
       * unit: millimeter/milliseconds, which is m/s 
       * </pre>
       *
       * <code>.Vec_2D translational_velocity = 2;</code>
       * @return Whether the translationalVelocity field is set.
       */
      public boolean hasTranslationalVelocity() {
        return translationalVelocityBuilder_ != null || translationalVelocity_ != null;
      }
      /**
       * <pre>
       * unit: millimeter/milliseconds, which is m/s 
       * </pre>
       *
       * <code>.Vec_2D translational_velocity = 2;</code>
       * @return The translationalVelocity.
       */
      public inputHandler.VFirmwareAPI.Vec_2D getTranslationalVelocity() {
        if (translationalVelocityBuilder_ == null) {
          return translationalVelocity_ == null ? inputHandler.VFirmwareAPI.Vec_2D.getDefaultInstance() : translationalVelocity_;
        } else {
          return translationalVelocityBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * unit: millimeter/milliseconds, which is m/s 
       * </pre>
       *
       * <code>.Vec_2D translational_velocity = 2;</code>
       */
      public Builder setTranslationalVelocity(inputHandler.VFirmwareAPI.Vec_2D value) {
        if (translationalVelocityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          translationalVelocity_ = value;
          onChanged();
        } else {
          translationalVelocityBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * unit: millimeter/milliseconds, which is m/s 
       * </pre>
       *
       * <code>.Vec_2D translational_velocity = 2;</code>
       */
      public Builder setTranslationalVelocity(
          inputHandler.VFirmwareAPI.Vec_2D.Builder builderForValue) {
        if (translationalVelocityBuilder_ == null) {
          translationalVelocity_ = builderForValue.build();
          onChanged();
        } else {
          translationalVelocityBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * unit: millimeter/milliseconds, which is m/s 
       * </pre>
       *
       * <code>.Vec_2D translational_velocity = 2;</code>
       */
      public Builder mergeTranslationalVelocity(inputHandler.VFirmwareAPI.Vec_2D value) {
        if (translationalVelocityBuilder_ == null) {
          if (translationalVelocity_ != null) {
            translationalVelocity_ =
              inputHandler.VFirmwareAPI.Vec_2D.newBuilder(translationalVelocity_).mergeFrom(value).buildPartial();
          } else {
            translationalVelocity_ = value;
          }
          onChanged();
        } else {
          translationalVelocityBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * unit: millimeter/milliseconds, which is m/s 
       * </pre>
       *
       * <code>.Vec_2D translational_velocity = 2;</code>
       */
      public Builder clearTranslationalVelocity() {
        if (translationalVelocityBuilder_ == null) {
          translationalVelocity_ = null;
          onChanged();
        } else {
          translationalVelocity_ = null;
          translationalVelocityBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * unit: millimeter/milliseconds, which is m/s 
       * </pre>
       *
       * <code>.Vec_2D translational_velocity = 2;</code>
       */
      public inputHandler.VFirmwareAPI.Vec_2D.Builder getTranslationalVelocityBuilder() {
        
        onChanged();
        return getTranslationalVelocityFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * unit: millimeter/milliseconds, which is m/s 
       * </pre>
       *
       * <code>.Vec_2D translational_velocity = 2;</code>
       */
      public inputHandler.VFirmwareAPI.Vec_2DOrBuilder getTranslationalVelocityOrBuilder() {
        if (translationalVelocityBuilder_ != null) {
          return translationalVelocityBuilder_.getMessageOrBuilder();
        } else {
          return translationalVelocity_ == null ?
              inputHandler.VFirmwareAPI.Vec_2D.getDefaultInstance() : translationalVelocity_;
        }
      }
      /**
       * <pre>
       * unit: millimeter/milliseconds, which is m/s 
       * </pre>
       *
       * <code>.Vec_2D translational_velocity = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          inputHandler.VFirmwareAPI.Vec_2D, inputHandler.VFirmwareAPI.Vec_2D.Builder, inputHandler.VFirmwareAPI.Vec_2DOrBuilder> 
          getTranslationalVelocityFieldBuilder() {
        if (translationalVelocityBuilder_ == null) {
          translationalVelocityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              inputHandler.VFirmwareAPI.Vec_2D, inputHandler.VFirmwareAPI.Vec_2D.Builder, inputHandler.VFirmwareAPI.Vec_2DOrBuilder>(
                  getTranslationalVelocity(),
                  getParentForChildren(),
                  isClean());
          translationalVelocity_ = null;
        }
        return translationalVelocityBuilder_;
      }

      private float rotationalDisplacement_ ;
      /**
       * <pre>
       * unit: degree (0 ~ 180) for the left half, 
       *              (0 ~ -180) for the right half
       * </pre>
       *
       * <code>float rotational_displacement = 3;</code>
       * @return The rotationalDisplacement.
       */
      @java.lang.Override
      public float getRotationalDisplacement() {
        return rotationalDisplacement_;
      }
      /**
       * <pre>
       * unit: degree (0 ~ 180) for the left half, 
       *              (0 ~ -180) for the right half
       * </pre>
       *
       * <code>float rotational_displacement = 3;</code>
       * @param value The rotationalDisplacement to set.
       * @return This builder for chaining.
       */
      public Builder setRotationalDisplacement(float value) {
        
        rotationalDisplacement_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unit: degree (0 ~ 180) for the left half, 
       *              (0 ~ -180) for the right half
       * </pre>
       *
       * <code>float rotational_displacement = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRotationalDisplacement() {
        
        rotationalDisplacement_ = 0F;
        onChanged();
        return this;
      }

      private float rotationalVelocity_ ;
      /**
       * <pre>
       * unit: degree/millisecond, sign transition from 180 to -180 is handled 
       * </pre>
       *
       * <code>float rotational_velocity = 4;</code>
       * @return The rotationalVelocity.
       */
      @java.lang.Override
      public float getRotationalVelocity() {
        return rotationalVelocity_;
      }
      /**
       * <pre>
       * unit: degree/millisecond, sign transition from 180 to -180 is handled 
       * </pre>
       *
       * <code>float rotational_velocity = 4;</code>
       * @param value The rotationalVelocity to set.
       * @return This builder for chaining.
       */
      public Builder setRotationalVelocity(float value) {
        
        rotationalVelocity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unit: degree/millisecond, sign transition from 180 to -180 is handled 
       * </pre>
       *
       * <code>float rotational_velocity = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRotationalVelocity() {
        
        rotationalVelocity_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:VF_Data)
    }

    // @@protoc_insertion_point(class_scope:VF_Data)
    private static final inputHandler.VFirmwareAPI.VF_Data DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new inputHandler.VFirmwareAPI.VF_Data();
    }

    public static inputHandler.VFirmwareAPI.VF_Data getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VF_Data>
        PARSER = new com.google.protobuf.AbstractParser<VF_Data>() {
      @java.lang.Override
      public VF_Data parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VF_Data(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VF_Data> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VF_Data> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public inputHandler.VFirmwareAPI.VF_Data getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Vec_2D_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Vec_2D_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_VF_Commands_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_VF_Commands_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_VF_Data_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_VF_Data_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023vFirmware_API.proto\"\036\n\006Vec_2D\022\t\n\001x\030\001 \001" +
      "(\002\022\t\n\001y\030\002 \001(\002\"\210\001\n\013VF_Commands\022\014\n\004init\030\001 " +
      "\001(\010\022%\n\024translational_output\030\002 \001(\0132\007.Vec_" +
      "2D\022\031\n\021rotational_output\030\003 \001(\002\022\027\n\006kicker\030" +
      "\004 \001(\0132\007.Vec_2D\022\020\n\010dribbler\030\005 \001(\010\"\235\001\n\007VF_" +
      "Data\022+\n\032translational_displacement\030\001 \001(\013" +
      "2\007.Vec_2D\022\'\n\026translational_velocity\030\002 \001(" +
      "\0132\007.Vec_2D\022\037\n\027rotational_displacement\030\003 " +
      "\001(\002\022\033\n\023rotational_velocity\030\004 \001(\002B\016\n\014inpu" +
      "tHandlerb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_Vec_2D_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Vec_2D_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Vec_2D_descriptor,
        new java.lang.String[] { "X", "Y", });
    internal_static_VF_Commands_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_VF_Commands_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_VF_Commands_descriptor,
        new java.lang.String[] { "Init", "TranslationalOutput", "RotationalOutput", "Kicker", "Dribbler", });
    internal_static_VF_Data_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_VF_Data_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_VF_Data_descriptor,
        new java.lang.String[] { "TranslationalDisplacement", "TranslationalVelocity", "RotationalDisplacement", "RotationalVelocity", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
