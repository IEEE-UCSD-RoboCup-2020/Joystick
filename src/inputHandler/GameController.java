// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameController.proto

package inputHandler;

public final class GameController {
  private GameController() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ControllerInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ControllerInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required float x_axis_value = 1;</code>
     * @return Whether the xAxisValue field is set.
     */
    boolean hasXAxisValue();
    /**
     * <code>required float x_axis_value = 1;</code>
     * @return The xAxisValue.
     */
    float getXAxisValue();

    /**
     * <code>required float y_axis_value = 2;</code>
     * @return Whether the yAxisValue field is set.
     */
    boolean hasYAxisValue();
    /**
     * <code>required float y_axis_value = 2;</code>
     * @return The yAxisValue.
     */
    float getYAxisValue();

    /**
     * <code>required float spin_speed = 3;</code>
     * @return Whether the spinSpeed field is set.
     */
    boolean hasSpinSpeed();
    /**
     * <code>required float spin_speed = 3;</code>
     * @return The spinSpeed.
     */
    float getSpinSpeed();

    /**
     * <code>required bool shoot = 4;</code>
     * @return Whether the shoot field is set.
     */
    boolean hasShoot();
    /**
     * <code>required bool shoot = 4;</code>
     * @return The shoot.
     */
    boolean getShoot();

    /**
     * <code>optional float shoot_angle = 5;</code>
     * @return Whether the shootAngle field is set.
     */
    boolean hasShootAngle();
    /**
     * <code>optional float shoot_angle = 5;</code>
     * @return The shootAngle.
     */
    float getShootAngle();
  }
  /**
   * Protobuf type {@code ControllerInput}
   */
  public static final class ControllerInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ControllerInput)
      ControllerInputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ControllerInput.newBuilder() to construct.
    private ControllerInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ControllerInput() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ControllerInput();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ControllerInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              xAxisValue_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              yAxisValue_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              spinSpeed_ = input.readFloat();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              shoot_ = input.readBool();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              shootAngle_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return inputHandler.GameController.internal_static_ControllerInput_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return inputHandler.GameController.internal_static_ControllerInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              inputHandler.GameController.ControllerInput.class, inputHandler.GameController.ControllerInput.Builder.class);
    }

    private int bitField0_;
    public static final int X_AXIS_VALUE_FIELD_NUMBER = 1;
    private float xAxisValue_;
    /**
     * <code>required float x_axis_value = 1;</code>
     * @return Whether the xAxisValue field is set.
     */
    @java.lang.Override
    public boolean hasXAxisValue() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required float x_axis_value = 1;</code>
     * @return The xAxisValue.
     */
    @java.lang.Override
    public float getXAxisValue() {
      return xAxisValue_;
    }

    public static final int Y_AXIS_VALUE_FIELD_NUMBER = 2;
    private float yAxisValue_;
    /**
     * <code>required float y_axis_value = 2;</code>
     * @return Whether the yAxisValue field is set.
     */
    @java.lang.Override
    public boolean hasYAxisValue() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required float y_axis_value = 2;</code>
     * @return The yAxisValue.
     */
    @java.lang.Override
    public float getYAxisValue() {
      return yAxisValue_;
    }

    public static final int SPIN_SPEED_FIELD_NUMBER = 3;
    private float spinSpeed_;
    /**
     * <code>required float spin_speed = 3;</code>
     * @return Whether the spinSpeed field is set.
     */
    @java.lang.Override
    public boolean hasSpinSpeed() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required float spin_speed = 3;</code>
     * @return The spinSpeed.
     */
    @java.lang.Override
    public float getSpinSpeed() {
      return spinSpeed_;
    }

    public static final int SHOOT_FIELD_NUMBER = 4;
    private boolean shoot_;
    /**
     * <code>required bool shoot = 4;</code>
     * @return Whether the shoot field is set.
     */
    @java.lang.Override
    public boolean hasShoot() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>required bool shoot = 4;</code>
     * @return The shoot.
     */
    @java.lang.Override
    public boolean getShoot() {
      return shoot_;
    }

    public static final int SHOOT_ANGLE_FIELD_NUMBER = 5;
    private float shootAngle_;
    /**
     * <code>optional float shoot_angle = 5;</code>
     * @return Whether the shootAngle field is set.
     */
    @java.lang.Override
    public boolean hasShootAngle() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional float shoot_angle = 5;</code>
     * @return The shootAngle.
     */
    @java.lang.Override
    public float getShootAngle() {
      return shootAngle_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasXAxisValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasYAxisValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSpinSpeed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasShoot()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, xAxisValue_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, yAxisValue_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, spinSpeed_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBool(4, shoot_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeFloat(5, shootAngle_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, xAxisValue_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, yAxisValue_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, spinSpeed_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, shoot_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, shootAngle_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof inputHandler.GameController.ControllerInput)) {
        return super.equals(obj);
      }
      inputHandler.GameController.ControllerInput other = (inputHandler.GameController.ControllerInput) obj;

      if (hasXAxisValue() != other.hasXAxisValue()) return false;
      if (hasXAxisValue()) {
        if (java.lang.Float.floatToIntBits(getXAxisValue())
            != java.lang.Float.floatToIntBits(
                other.getXAxisValue())) return false;
      }
      if (hasYAxisValue() != other.hasYAxisValue()) return false;
      if (hasYAxisValue()) {
        if (java.lang.Float.floatToIntBits(getYAxisValue())
            != java.lang.Float.floatToIntBits(
                other.getYAxisValue())) return false;
      }
      if (hasSpinSpeed() != other.hasSpinSpeed()) return false;
      if (hasSpinSpeed()) {
        if (java.lang.Float.floatToIntBits(getSpinSpeed())
            != java.lang.Float.floatToIntBits(
                other.getSpinSpeed())) return false;
      }
      if (hasShoot() != other.hasShoot()) return false;
      if (hasShoot()) {
        if (getShoot()
            != other.getShoot()) return false;
      }
      if (hasShootAngle() != other.hasShootAngle()) return false;
      if (hasShootAngle()) {
        if (java.lang.Float.floatToIntBits(getShootAngle())
            != java.lang.Float.floatToIntBits(
                other.getShootAngle())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasXAxisValue()) {
        hash = (37 * hash) + X_AXIS_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getXAxisValue());
      }
      if (hasYAxisValue()) {
        hash = (37 * hash) + Y_AXIS_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getYAxisValue());
      }
      if (hasSpinSpeed()) {
        hash = (37 * hash) + SPIN_SPEED_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getSpinSpeed());
      }
      if (hasShoot()) {
        hash = (37 * hash) + SHOOT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getShoot());
      }
      if (hasShootAngle()) {
        hash = (37 * hash) + SHOOT_ANGLE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getShootAngle());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static inputHandler.GameController.ControllerInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static inputHandler.GameController.ControllerInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static inputHandler.GameController.ControllerInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static inputHandler.GameController.ControllerInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static inputHandler.GameController.ControllerInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static inputHandler.GameController.ControllerInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static inputHandler.GameController.ControllerInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static inputHandler.GameController.ControllerInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static inputHandler.GameController.ControllerInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static inputHandler.GameController.ControllerInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static inputHandler.GameController.ControllerInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static inputHandler.GameController.ControllerInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(inputHandler.GameController.ControllerInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ControllerInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ControllerInput)
        inputHandler.GameController.ControllerInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return inputHandler.GameController.internal_static_ControllerInput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return inputHandler.GameController.internal_static_ControllerInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                inputHandler.GameController.ControllerInput.class, inputHandler.GameController.ControllerInput.Builder.class);
      }

      // Construct using inputHandler.GameController.ControllerInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        xAxisValue_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        yAxisValue_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        spinSpeed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        shoot_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        shootAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return inputHandler.GameController.internal_static_ControllerInput_descriptor;
      }

      @java.lang.Override
      public inputHandler.GameController.ControllerInput getDefaultInstanceForType() {
        return inputHandler.GameController.ControllerInput.getDefaultInstance();
      }

      @java.lang.Override
      public inputHandler.GameController.ControllerInput build() {
        inputHandler.GameController.ControllerInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public inputHandler.GameController.ControllerInput buildPartial() {
        inputHandler.GameController.ControllerInput result = new inputHandler.GameController.ControllerInput(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.xAxisValue_ = xAxisValue_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.yAxisValue_ = yAxisValue_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.spinSpeed_ = spinSpeed_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.shoot_ = shoot_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.shootAngle_ = shootAngle_;
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof inputHandler.GameController.ControllerInput) {
          return mergeFrom((inputHandler.GameController.ControllerInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(inputHandler.GameController.ControllerInput other) {
        if (other == inputHandler.GameController.ControllerInput.getDefaultInstance()) return this;
        if (other.hasXAxisValue()) {
          setXAxisValue(other.getXAxisValue());
        }
        if (other.hasYAxisValue()) {
          setYAxisValue(other.getYAxisValue());
        }
        if (other.hasSpinSpeed()) {
          setSpinSpeed(other.getSpinSpeed());
        }
        if (other.hasShoot()) {
          setShoot(other.getShoot());
        }
        if (other.hasShootAngle()) {
          setShootAngle(other.getShootAngle());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasXAxisValue()) {
          return false;
        }
        if (!hasYAxisValue()) {
          return false;
        }
        if (!hasSpinSpeed()) {
          return false;
        }
        if (!hasShoot()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        inputHandler.GameController.ControllerInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (inputHandler.GameController.ControllerInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float xAxisValue_ ;
      /**
       * <code>required float x_axis_value = 1;</code>
       * @return Whether the xAxisValue field is set.
       */
      @java.lang.Override
      public boolean hasXAxisValue() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required float x_axis_value = 1;</code>
       * @return The xAxisValue.
       */
      @java.lang.Override
      public float getXAxisValue() {
        return xAxisValue_;
      }
      /**
       * <code>required float x_axis_value = 1;</code>
       * @param value The xAxisValue to set.
       * @return This builder for chaining.
       */
      public Builder setXAxisValue(float value) {
        bitField0_ |= 0x00000001;
        xAxisValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float x_axis_value = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearXAxisValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        xAxisValue_ = 0F;
        onChanged();
        return this;
      }

      private float yAxisValue_ ;
      /**
       * <code>required float y_axis_value = 2;</code>
       * @return Whether the yAxisValue field is set.
       */
      @java.lang.Override
      public boolean hasYAxisValue() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required float y_axis_value = 2;</code>
       * @return The yAxisValue.
       */
      @java.lang.Override
      public float getYAxisValue() {
        return yAxisValue_;
      }
      /**
       * <code>required float y_axis_value = 2;</code>
       * @param value The yAxisValue to set.
       * @return This builder for chaining.
       */
      public Builder setYAxisValue(float value) {
        bitField0_ |= 0x00000002;
        yAxisValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float y_axis_value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearYAxisValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        yAxisValue_ = 0F;
        onChanged();
        return this;
      }

      private float spinSpeed_ ;
      /**
       * <code>required float spin_speed = 3;</code>
       * @return Whether the spinSpeed field is set.
       */
      @java.lang.Override
      public boolean hasSpinSpeed() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required float spin_speed = 3;</code>
       * @return The spinSpeed.
       */
      @java.lang.Override
      public float getSpinSpeed() {
        return spinSpeed_;
      }
      /**
       * <code>required float spin_speed = 3;</code>
       * @param value The spinSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setSpinSpeed(float value) {
        bitField0_ |= 0x00000004;
        spinSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float spin_speed = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpinSpeed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        spinSpeed_ = 0F;
        onChanged();
        return this;
      }

      private boolean shoot_ ;
      /**
       * <code>required bool shoot = 4;</code>
       * @return Whether the shoot field is set.
       */
      @java.lang.Override
      public boolean hasShoot() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>required bool shoot = 4;</code>
       * @return The shoot.
       */
      @java.lang.Override
      public boolean getShoot() {
        return shoot_;
      }
      /**
       * <code>required bool shoot = 4;</code>
       * @param value The shoot to set.
       * @return This builder for chaining.
       */
      public Builder setShoot(boolean value) {
        bitField0_ |= 0x00000008;
        shoot_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool shoot = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearShoot() {
        bitField0_ = (bitField0_ & ~0x00000008);
        shoot_ = false;
        onChanged();
        return this;
      }

      private float shootAngle_ ;
      /**
       * <code>optional float shoot_angle = 5;</code>
       * @return Whether the shootAngle field is set.
       */
      @java.lang.Override
      public boolean hasShootAngle() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional float shoot_angle = 5;</code>
       * @return The shootAngle.
       */
      @java.lang.Override
      public float getShootAngle() {
        return shootAngle_;
      }
      /**
       * <code>optional float shoot_angle = 5;</code>
       * @param value The shootAngle to set.
       * @return This builder for chaining.
       */
      public Builder setShootAngle(float value) {
        bitField0_ |= 0x00000010;
        shootAngle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float shoot_angle = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearShootAngle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        shootAngle_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ControllerInput)
    }

    // @@protoc_insertion_point(class_scope:ControllerInput)
    private static final inputHandler.GameController.ControllerInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new inputHandler.GameController.ControllerInput();
    }

    public static inputHandler.GameController.ControllerInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ControllerInput>
        PARSER = new com.google.protobuf.AbstractParser<ControllerInput>() {
      @java.lang.Override
      public ControllerInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ControllerInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ControllerInput> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ControllerInput> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public inputHandler.GameController.ControllerInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ControllerInput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ControllerInput_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024GameController.proto\"u\n\017ControllerInpu" +
      "t\022\024\n\014x_axis_value\030\001 \002(\002\022\024\n\014y_axis_value\030" +
      "\002 \002(\002\022\022\n\nspin_speed\030\003 \002(\002\022\r\n\005shoot\030\004 \002(\010" +
      "\022\023\n\013shoot_angle\030\005 \001(\002B\016\n\014inputHandler"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_ControllerInput_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ControllerInput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ControllerInput_descriptor,
        new java.lang.String[] { "XAxisValue", "YAxisValue", "SpinSpeed", "Shoot", "ShootAngle", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
